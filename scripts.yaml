mode_privacy:
  alias: Mode - Privacy
  sequence:
  - service: media_player.turn_off
    target:
      entity_id: media_player.apple_tv
  - service: cover.close_cover
    target:
      entity_id:
      - cover.keuken_rolgordijnen
  - service: cover.close_cover
    target:
      entity_id:
      - cover.woonkamer_gordijn
      - cover.achterdeur_gordijn
  - service: switch.turn_off
    target:
      entity_id:
      - switch.begane_grond_adaptive_lighting
      - switch.security_cam
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.keuken_control
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: switch.adaptive_lighting_ruimten
      lights: light.keuken_groep
  - service: light.turn_on
    target:
      entity_id: light.keuken_groep
    data:
      brightness_pct: 100
  - service: light.turn_on
    data:
      brightness_pct: 10
    target:
      entity_id: light.filament_lamps
  - service: light.turn_off
    target:
      entity_id:
      - light.woonkamer_eettafel_lamp
      - light.woonkamer_lamp
  - service: media_player.volume_set
    target:
      entity_id: media_player.sonos_arc
    data:
      volume_level: 0.15
  - service: media_player.select_source
    data_template:
      source: '{{ ["The Beauty in All", "This Is Rhye", "This Is FKJ"] | random }}'
    target:
      entity_id: media_player.sonos_arc
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: input_select.select_option
    target:
      entity_id: input_select.play_gradient_scenes
    data_template:
      option: '{{ ["Soho", "Tokyo", "Sundown", "Disturbia", "Tyrell", "Winter beauty"]
        | random }}'
  mode: single
  icon: mdi:heart-circle
mode_cinema:
  alias: Mode - Cinema
  sequence:
  - service: media_player.turn_on
    target:
      entity_id: media_player.apple_tv
  - service: cover.close_cover
    target:
      entity_id:
      - cover.keuken_rolgordijnen
  - service: cover.close_cover
    target:
      entity_id:
      - cover.woonkamer_gordijn
      - cover.achterdeur_gordijn
  - service: switch.turn_off
    target:
      entity_id:
      - switch.begane_grond_adaptive_lighting
  - service: light.turn_on
    target:
      entity_id:
      - light.ambilight
    data: {}
  - service: light.turn_on
    target:
      entity_id:
      - light.ambilight
    data:
      brightness_pct: 25
  - service: light.turn_on
    target:
      entity_id: light.woonkamer_eettafel_lamp
    data:
      brightness_pct: 20
  - service: light.turn_off
    target:
      entity_id:
      - light.filament_lamps
      - light.woonkamer_lamp
      - light.woonkamer_kastverlichting
  mode: single
  icon: mdi:movie-roll
dummy:
  alias: No action
  sequence:
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 1
  mode: restart
  icon: mdi:debug-step-over
mode_party:
  alias: Mode - Party
  sequence:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.keuken_control
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: switch.adaptive_lighting_ruimten
      lights: light.keuken_groep
  - choose:
    - conditions:
      - condition: state
        entity_id: light.woonkamer_groep
        state: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.woonkamer_groep
    default: []
  - service: switch.turn_off
    target:
      entity_id: switch.begane_grond_adaptive_lighting
  mode: single
  icon: mdi:account-supervisor-circle
home_state_evening:
  alias: Home State - Evening
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.home_state
    data:
      option: Evening
  - service: light.turn_on
    target:
      entity_id:
      - light.buiten_groep
    data:
      brightness_pct: 50
  - service: cover.set_cover_position
    data:
      position: 0
    entity_id: cover.keuken_rolgordijnen
  - service: script.turn_on
    target:
      entity_id: script.action_force_sleepy_blinds
    data:
      variables:
        blind_group:
          entity_id: cover.slaapkamer_rolgordijnen
        blind_1: cover.slaapkamer_l
        blind_2: cover.slaapkamer_r
        action: Close
  - service: cover.close_cover
    target:
      entity_id: cover.woonkamer_gordijn
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: Home
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: On vacation
      sequence:
      - service: script.turn_on
        target:
          entity_id: script.action_turn_evening_lights_on
      - condition: state
        entity_id: switch.party_mode
        state: 'off'
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
      - service: cover.close_cover
        target:
          entity_id:
          - cover.achterdeur_gordijn
    default:
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
        milliseconds: 0
    - service: cover.close_cover
      target:
        entity_id:
        - cover.achterdeur_gordijn
  mode: single
  icon: mdi:weather-sunset
home_state_night:
  alias: Home State - Night
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.home_state
    data:
      option: Night
  - service: switch.turn_on
    target:
      entity_id: switch.sleeping_occupancy
  - service: media_player.turn_off
    target:
      entity_id: media_player.apple_tv
  - service: media_player.media_pause
    data: {}
    target:
      entity_id:
      - media_player.ikea_symfonisk
      - media_player.sonos_arc
      - media_player.homepod_mini
  - service: climate.turn_off
    data: {}
    entity_id: climate.tuya_duux_threesixty
  - service: script.turn_on
    target:
      entity_id: script.action_close_curtains
  - service: script.turn_on
    target:
      entity_id:
      - script.action_turn_lights_off
  mode: single
  icon: mdi:weather-night
home_state_morning:
  alias: Home State - Morning
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.home_state
    data:
      option: Morning
  - service: light.turn_off
    target:
      entity_id:
      - light.buiten_groep
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: Home
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: Sleeping
      sequence:
      - condition: state
        entity_id: switch.party_mode
        state: 'off'
      - service: cover.set_cover_position
        data:
          position: 100
        entity_id: cover.keuken_rolgordijnen
      - service: cover.open_cover
        target:
          entity_id:
          - cover.woonkamer_gordijn
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 0
      - service: cover.open_cover
        target:
          entity_id: cover.achterdeur_gordijn
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: Away
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: On vacation
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.slaapkamer_control
      - service: script.turn_on
        target:
          entity_id: script.action_open_curtains
    default:
    - service: script.dummy
  mode: single
  icon: mdi:weather-sunset-up
home_state_day:
  alias: Home State - Day
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.home_state
    data:
      option: Day
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: Away
        - condition: state
          entity_id: input_select.home_state_occupancy
          state: On vacation
      sequence:
      - service: script.dummy
    default:
    - service: switch.turn_on
      target:
        entity_id: switch.home_occupancy
    - service: fan.turn_on
      target:
        entity_id: fan.smartmi_p1
  - service: light.turn_off
    target:
      entity_id:
      - light.buiten_groep
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.slaapkamer_control
  - service: media_player.media_pause
    target:
      entity_id:
      - media_player.sonos_roam
  - choose:
    - conditions:
      - condition: state
        entity_id: fan.whisper_flex
        state: 'on'
      sequence:
      - service: fan.set_preset_mode
        target:
          entity_id: fan.whisper_flex
        data:
          preset_mode: Normal Mode
      - service: fan.turn_off
        target:
          entity_id:
          - fan.whisper_flex
    default:
    - service: script.dummy
  - service: script.turn_on
    target:
      entity_id: script.action_open_curtains
  mode: single
  icon: mdi:weather-sunny
home_occupancy_away:
  alias: Home Occupancy - Away
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.home_state_occupancy
    data:
      option: Away
  - condition: state
    entity_id: switch.party_mode
    state: 'off'
  - service: alarm_control_panel.alarm_arm_away
    target:
      entity_id: alarm_control_panel.security_system
  - service: script.generic_component_climate
    data:
      climate:
        entity_id:
        - climate.woonkamer_centrale_verwarming
        - climate.studiekamer_radiator
        - climate.kledingkamer_radiator
        - climate.slaapkamer_radiator
      mode: Away
  - service: climate.turn_off
    target:
      entity_id:
      - climate.tuya_duux_threesixty
  - service: media_player.turn_off
    target:
      entity_id: media_player.apple_tv
  - service: media_player.media_pause
    target:
      entity_id:
      - media_player.sonos_arc
      - media_player.sonos_roam
      - media_player.ikea_symfonisk
      - media_player.homepod_mini
  - service: fan.turn_off
    target:
      entity_id: fan.whisper_flex
  - service: script.turn_on
    target:
      entity_id:
      - script.action_turn_lights_off
  mode: single
  icon: mdi:map-marker-circle
home_occupancy_home:
  alias: Home Occupancy - Home
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.home_state_occupancy
    data:
      option: Home
  - service: alarm_control_panel.alarm_disarm
    target:
      entity_id: alarm_control_panel.security_system
  - service: switch.turn_off
    target:
      entity_id:
      - switch.adaptive_lighting_sleep_mode_ruimten
      - switch.adaptive_lighting_sleep_mode_woonkamer
      - switch.adaptive_lighting_sleep_mode_filaments
      - switch.adaptive_lighting_sleep_mode_slaapkamer
  - service: climate.turn_on
    target:
      entity_id:
      - climate.woonkamer_centrale_verwarming
      - climate.studiekamer_radiator
      - climate.kledingkamer_radiator
      - climate.slaapkamer_radiator
  - condition: state
    entity_id: switch.party_mode
    state: 'off'
  - service: script.turn_on
    target:
      entity_id:
      - script.logic_conditional_heating
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.home_state
      state: Evening
    - condition: state
      entity_id: input_select.home_state
      state: Night
  - service: script.turn_on
    target:
      entity_id: script.action_turn_evening_lights_on
  mode: single
  icon: mdi:home-circle
home_occupancy_sleeping:
  alias: Home Occupancy - Sleeping
  sequence:
  - service: input_select.select_option
    target:
      entity_id: input_select.home_state_occupancy
    data:
      option: Sleeping
  - service: alarm_control_panel.alarm_arm_night
    target:
      entity_id: alarm_control_panel.security_system
  - service: switch.turn_on
    target:
      entity_id:
      - switch.adaptive_lighting_sleep_mode_ruimten
      - switch.adaptive_lighting_sleep_mode_woonkamer
      - switch.adaptive_lighting_sleep_mode_filaments
      - switch.adaptive_lighting_sleep_mode_slaapkamer
  - service: script.generic_component_climate
    data:
      climate:
        entity_id:
        - climate.woonkamer_centrale_verwarming
        - climate.studiekamer_radiator
        - climate.kledingkamer_radiator
        - climate.slaapkamer_radiator
      mode: Sleep
  - service: script.turn_on
    target:
      entity_id:
      - script.logic_set_sleep_music
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.slaapkamer_control
  - service: light.turn_on
    target:
      entity_id:
      - light.buiten_groep
    data:
      brightness_pct: 50
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.slaapkamer_lamp
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.smartmi_p1_preset_modes
        state: Manual
      sequence:
      - service: fan.set_preset_mode
        target:
          entity_id: fan.smartmi_p1
        data:
          preset_mode: Auto
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: fan.turn_off
        target:
          entity_id: fan.smartmi_p1
    default:
    - service: fan.turn_off
      target:
        entity_id: fan.smartmi_p1
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.slaapkamer_temperature_multi_sensor
        above: '22.5'
      - condition: state
        entity_id: fan.whisper_flex
        state: 'off'
      sequence:
      - service: fan.turn_on
        target:
          entity_id: fan.whisper_flex
      - wait_template: '{{ is_state(''fan.tuya_whisper_flex'', ''on'') }}'
      - service: fan.oscillate
        target:
          entity_id: fan.whisper_flex
        data:
          oscillating: true
      - service: fan.set_preset_mode
        target:
          entity_id: fan.whisper_flex
        data:
          preset_mode: Sleep Mode
    default:
    - service: script.dummy
  mode: restart
  icon: mdi:bell-circle
home_occupancy_on_vacation:
  alias: Home Occupancy - On vacation
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ state == ''on vacation'' }}'
      sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.home_state_occupancy
        data:
          option: On vacation
      - service: script.generic_component_climate
        data:
          climate:
            entity_id:
            - climate.woonkamer_centrale_verwarming
            - climate.studiekamer_radiator
            - climate.kledingkamer_radiator
            - climate.slaapkamer_radiator
          mode: Vacation
      - service: fan.turn_off
        target:
          entity_id: fan.smartmi_p1
    - conditions:
      - condition: template
        value_template: '{{ state == ''from vacation'' }}'
      sequence:
      - service: climate.turn_on
        target:
          entity_id:
          - climate.woonkamer_centrale_verwarming
          - climate.kledingkamer_radiator
          - climate.studiekamer_radiator
          - climate.slaapkamer_radiator
      - service: fan.turn_on
        target:
          entity_id: fan.smartmi_p1
    default: []
  mode: single
  icon: mdi:arrow-right-circle-outline
generic_component_motion:
  alias: Generic Component | Motion
  description: Generic component to turn on light(s) when motion is detected, dims
    lights when no motion is detected and turns light(s) off after a delay
  fields:
    lights:
      name: Lights
      description: The light(s) to turn on/off and dim
      required: true
      selector:
        entity:
          domain: light
    adaptive_lighting:
      name: Adaptive Lighting
      description: The corresponding Adaptive Lighting master switch
      required: true
      selector:
        entity:
          domain: switch
          integration: adaptive_lighting
    motion_sensor:
      name: Motion Sensor
      description: Motion or occupancy sensor to monitor
      required: true
      selector:
        entity:
    seconds_before_dimmed:
      name: Time before lights dim
      description: The time required after no motion is detected for lights to dim
      required: true
      default: 30
      selector:
        number:
          min: 30
          max: 30
          mode: box
          unit_of_measurement: second(s)
    seconds_before_off:
      name: Time before lights off
      description: The time required after lights are dimmed to turn them off
      required: true
      selector:
        number:
          min: 0
          max: 120
          unit_of_measurement: second(s)
  sequence:
  - service: adaptive_lighting.apply
    data:
      lights: '{{ lights }}'
      entity_id: '{{ adaptive_lighting }}'
  - service: light.turn_on
    data:
      entity_id: '{{ lights }}'
  - wait_for_trigger:
    - platform: template
      value_template: '{{ is_state(motion_sensor, ''off'') }}'
      for:
        seconds: 30
  - condition: template
    value_template: '{{ states(lights) == "on" }}'
  - service: light.turn_on
    data_template:
      entity_id: '{{ lights }}'
      brightness: '{{ (state_attr(lights, ''brightness'') / 2) | int }}'
  - delay:
      seconds: '{{ seconds_before_off }}'
  - condition: template
    value_template: '{{ states(motion_sensor) == "off" }}'
  - service: light.turn_off
    target:
      entity_id: '{{ lights }}'
  mode: parallel
  icon: mdi:motion
  max: 100
generic_component_notifications:
  alias: Generic Component | Notifications
  description: Generic component to handle software update notifications
  fields:
    software:
      name: Software
      required: true
      selector:
        text:
    version:
      name: Current version
      required: true
      selector:
        text:
    newest_version:
      name: Newest version
      required: true
      selector:
        text:
    url:
      name: URL
      required: false
      selector:
        text:
    more_information:
      name: More information
      required: false
      selector:
        text:
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ software == ''Community Store'' }}'
      sequence:
      - service: notify.notify
        data:
          title: homeOS
          message: "{% if is_state('sensor.hacs', '1') %}\n  There is {{ states('sensor.hacs')\
            \ }} pending community update available.\n{% else %}\n  There are {{ states('sensor.hacs')\
            \ }} pending community updates available.\n{% endif %}\n"
          data:
            subtitle: Software Update
            group: hacs_update
            url: '{{ url }}'
            push:
              badge: '{{ states(''sensor.software_update_badge'') }}'
    default:
    - service: notify.notify
      data:
        message: '{{ software }} {{ newest_version }} is available and you are currently
          on {{ version }}. {{ more_information if more_information is defined }}

          '
        title: homeOS
        data:
          subtitle: Software Update
          group: update
          url: '{{ url }}'
          push:
            badge: '{{ states(''sensor.software_update_badge'') }}'
  mode: parallel
  icon: mdi:checkbox-blank-badge
  max: 10
generic_component_climate:
  alias: Generic Component | Climate
  description: Generic component to handle climate temperatures switching based on
    number entities
  fields:
    climate:
      name: Targets
      description: What should this service use as targeted areas, devices or entities.
      required: true
      selector:
        target:
          entity:
            domain: climate
    mode:
      name: Mode
      description: Mode (and temperature) to set the target to.
      required: true
      selector:
        select:
          options:
          - Comfort
          - Eco
          - Sleep
          - Away
          - Vacation
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ mode == ''Vacation'' }}'
      sequence:
      - service: climate.turn_off
        target: '{{ climate }}'
    default:
    - service: climate.turn_on
      target: '{{ climate }}'
    - service: climate.set_temperature
      target: '{{ climate }}'
      data:
        temperature: '{{ states("input_number.climate_" + mode)|float }}'
  mode: parallel
  icon: mdi:thermometer-plus
  max: 10
generic_component_scenes:
  alias: Generic Component | Scenes
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ states(helper) == ''Adaptive Lighting'' }}'
      sequence:
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: '{{ adaptive_lighting }}'
          lights: '{{ lights }}'
          manual_control: false
    default:
    - service: input_boolean.turn_on
      target:
        entity_id: '{{ control }}'
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: '{{ adaptive_lighting }}'
        lights: '{{ lights }}'
    - service: scene.turn_on
      data_template:
        entity_id: '{{ "scene." + room + "_" + states(helper)|lower|replace(" ", "_")|string
          }}'
  description: Generic component to handle scene switching based on select entities
  fields:
    room:
      name: Room
      description: The corresponding room in which the scenes are called
      required: true
      selector:
        select:
          options:
          - Woonkamer
          - Badkamer
          - Kledingkamer
          - Slaapkamer
          - Studiekamer
          - Zolder
    lights:
      name: Light(s)
      description: The Adaptive Lighting light(s) to apply or set manual control
      required: true
      selector:
        entity:
          domain: light
    adaptive_lighting:
      name: Adaptive Lighting
      description: The corresponding Adaptive Lighting master switch
      required: true
      selector:
        entity:
          domain: switch
          integration: adaptive_lighting
    control:
      name: Room control
      description: The room control entity that keeps the lights from going off
      required: true
      selector:
        entity:
          domain: input_boolean
    helper:
      name: Scene selector
      description: The select entity used to cycle scenes
      required: true
      selector:
        entity:
          domain: input_select
  mode: restart
  icon: mdi:palette-swatch-variant
action_set_tv_to_earc:
  alias: Action - Set TV to eARC
  sequence:
  - service: androidtv.adb_command
    data:
      entity_id: media_player.sony_bravia_tv
      command: sendevent /dev/input/event3 4 4 787395 && sendevent /dev/input/event3
        1 195 1 && sendevent /dev/input/event3 0 0 0 && sendevent /dev/input/event3
        4 4 787395 && sendevent /dev/input/event3 1 195 0 && sendevent /dev/input/event3
        0 0 0
  - service: androidtv.adb_command
    data:
      entity_id: media_player.sony_bravia_tv
      command: DOWN
  - service: androidtv.adb_command
    data:
      entity_id: media_player.sony_bravia_tv
      command: sendevent /dev/input/event3 4 4 787395 && sendevent /dev/input/event3
        1 195 1 && sendevent /dev/input/event3 0 0 0 && sendevent /dev/input/event3
        4 4 787395 && sendevent /dev/input/event3 1 195 0 && sendevent /dev/input/event3
        0 0 0
  mode: single
  icon: mdi:dolby
logic_conditional_heating:
  alias: Logic - CV Conditional Heating
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.gabriel_home
        state: 'on'
      - condition: state
        entity_id: switch.shanna_home
        state: 'off'
      sequence:
      - service: script.generic_component_climate
        data:
          climate:
            entity_id: climate.woonkamer_centrale_verwarming
          mode: Eco
    - conditions:
      - condition: state
        entity_id: switch.gabriel_home
        state: 'off'
      - condition: state
        entity_id: switch.shanna_home
        state: 'on'
      sequence:
      - service: script.generic_component_climate
        data:
          climate:
            entity_id: climate.woonkamer_centrale_verwarming
          mode: Comfort
    - conditions:
      - condition: state
        entity_id: switch.gabriel_home
        state: 'on'
      - condition: state
        entity_id: switch.shanna_home
        state: 'on'
      sequence:
      - service: script.generic_component_climate
        data:
          climate:
            entity_id: climate.woonkamer_centrale_verwarming
          mode: Comfort
    default: []
  mode: single
  icon: mdi:source-branch
logic_easy_entry:
  alias: Logic - Easy Entry
  sequence:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.home_state
      state: Evening
    - condition: state
      entity_id: input_select.home_state
      state: Night
  - service: light.turn_on
    target:
      entity_id:
      - light.woonkamer_eettafel_lamp
      - light.filament_lamps
      - light.play_gradient_lightstrip
  - service: cover.open_cover
    target:
      entity_id:
      - cover.achterdeur_switchbot
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.achterdeur_sensor
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.voordeur_sensor
      from: 'off'
      to: 'on'
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.achterdeur_sensor
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 30
    - platform: state
      entity_id: binary_sensor.voordeur_sensor
      from: 'on'
      to: 'off'
  - service: cover.close_cover
    target:
      entity_id:
      - cover.achterdeur_switchbot
  mode: restart
  icon: mdi:elevator-passenger
action_start_backup:
  alias: Action - Start Backup
  sequence:
  - service: hassio.addon_stdin
    data:
      addon: 15d21743_samba_backup
      input:
        command: trigger
        backup_name: Manual-backup v{version} | {date}
  mode: single
  icon: mdi:play-circle
logic_set_device_tracker_state:
  alias: Logic - Set Device Tracker State
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.gabriel_home
        state: 'on'
      sequence:
      - service: device_tracker.see
        data:
          dev_id: gabriel
          location_name: home
    default:
    - service: script.dummy
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.shanna_home
        state: 'on'
      sequence:
      - service: device_tracker.see
        data:
          dev_id: shanna
          location_name: home
    default:
    - service: script.dummy
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.zora_home
        state: 'on'
      sequence:
      - service: device_tracker.see
        data:
          dev_id: zora
          location_name: home
    default:
    - service: script.dummy
  mode: single
  icon: mdi:radar
action_sound_alarm:
  alias: Action - Sound Alarm
  sequence:
  - service: sonos.snapshot
    data:
      entity_id: media_player.ikea_symfonisk, media_player.sonos_roam, media_player.sonos_arc
  - service: media_player.volume_set
    data:
      volume_level: 1
    target:
      entity_id:
      - media_player.sonos_roam
      - media_player.ikea_symfonisk
      - media_player.sonos_arc
  - repeat:
      while:
      - condition: state
        entity_id: alarm_control_panel.security_system
        state: triggered
      sequence:
      - service: media_player.play_media
        data:
          media_content_id: http://192.168.2.55:8123/local/zapsplat_alarms/alarm_fire02.mp3
          media_content_type: music
        target:
          entity_id:
          - media_player.sonos_roam
          - media_player.ikea_symfonisk
          - media_player.sonos_arc
      - delay:
          hours: 0
          minutes: 0
          seconds: 6
          milliseconds: 0
  mode: single
  icon: mdi:surround-sound
logic_set_sleep_music:
  alias: Logic - Set Sleep Music
  sequence:
  - service: media_player.volume_set
    target:
      entity_id: media_player.sonos_roam
    data:
      volume_level: 0.2
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.sonos_roam
      state: playing
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.shanna_home
        state: 'off'
      sequence:
      - service: media_player.select_source
        data:
          source: Wellness & Healing ..... Stretching
        target:
          entity_id: media_player.sonos_roam
    default:
    - service: media_player.select_source
      data_template:
        source: '{{ ["Deep Sleep Meditation", "Peaceful Piano"] | random }}'
      target:
        entity_id: media_player.sonos_roam
  mode: single
  icon: mdi:alarm-note
action_turn_fan_off:
  alias: Action - Turn Fan Off
  sequence:
  - service: fan.turn_off
    target:
      entity_id:
      - fan.tuya_whisper_flex
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: scene.turn_on
    target:
      entity_id: scene.flex_off
  - wait_template: '{{ is_state(''fan.tuya_whisper_flex'', ''off'') }}'
    continue_on_timeout: false
  - service: input_select.select_option
    target:
      entity_id: input_select.whisper_flex_oscillating
    data:
      option: 'False'
  mode: restart
  icon: mdi:fan-off
action_open_curtains:
  alias: Action - Open Curtains
  sequence:
  - service: cover.set_cover_position
    target:
      entity_id: cover.keuken_rolgordijnen
    data:
      position: 100
  - service: script.turn_on
    target:
      entity_id: script.action_force_sleepy_blinds
    data:
      variables:
        blind_group:
          entity_id: cover.slaapkamer_rolgordijnen
        blind_1: cover.slaapkamer_l
        blind_2: cover.slaapkamer_r
        action: Open
  - service: cover.open_cover
    target:
      entity_id:
      - cover.woonkamer_gordijn
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: cover.open_cover
    target:
      entity_id: cover.achterdeur_gordijn
  mode: restart
  icon: mdi:brightness-5
action_close_curtains:
  alias: Action - Close Curtains
  sequence:
  - service: cover.set_cover_position
    target:
      entity_id: cover.keuken_rolgordijnen
    data:
      position: 0
  - service: cover.set_cover_position
    target:
      entity_id:
      - cover.slaapkamer_rolgordijnen
    data:
      position: 0
  - service: cover.close_cover
    target:
      entity_id:
      - cover.woonkamer_gordijn
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: cover.close_cover
    target:
      entity_id:
      - cover.achterdeur_gordijn
  mode: restart
  icon: mdi:brightness-1
action_turn_lights_off:
  alias: Action - Turn Lights Off
  sequence:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.gang_lamp
      - light.toilet_lamp
      - light.trapkast_lamp
      - light.keuken_groep
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.woonkamer_groep
      - light.woonkamer_kastverlichting
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id:
      - light.overloop_lamp
      - light.badkamer_lamp
      - light.kledingkamer_groep
      - light.studiekamer_groep
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id:
      - light.zolder_groep
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id:
      - light.play_gradient_lightstrip
      - light.woonkamer_play_lichtbalk
  mode: single
  icon: mdi:lightbulb-group-off
generic_component_climate_scheduler:
  alias: Generic Component | Climate | Scheduler
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ mode == ''Vacation'' }}'
      sequence:
      - service: climate.turn_off
        data:
          entity_id: '{{ climate }}'
    default:
    - service: climate.turn_on
      data:
        entity_id: '{{ climate }}'
    - service: climate.set_temperature
      data_template:
        entity_id: '{{ climate }}'
        temperature: '{{ states("input_number.climate_" + mode)|float }}'
  description: Generic component to handle climate temperatures switching based on
    number entities
  fields:
    climate:
      name: Targets
      description: What should this service use as targeted areas, devices or entities.
      required: true
      selector:
        entity:
          domain: climate
    mode:
      name: Mode
      description: Mode (and temperature) to set the target to.
      required: true
      selector:
        select:
          options:
          - Comfort
          - Eco
          - Sleep
          - Away
          - Vacation
  mode: parallel
  icon: mdi:table-clock
  max: 10
action_turn_evening_lights_on:
  alias: Action - Turn Evening Lights On
  sequence:
  - service: light.turn_on
    data: {}
    target:
      entity_id:
      - light.woonkamer_kastverlichting
      - light.woonkamer_groep
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_on
    target:
      entity_id: light.woonkamer_lamp
    data:
      brightness_pct: 10
  mode: single
  icon: mdi:lightbulb-group-outline
mode_gaming:
  alias: Mode - Gaming
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.xbox_series_s
        state: 'on'
      sequence:
      - service: media_player.turn_on
        target:
          entity_id: media_player.sony_bravia_tv
      - service: media_player.select_source
        target:
          entity_id: media_player.play_sync_box
        data:
          source: Xbox Series S
    - conditions:
      - condition: state
        entity_id: media_player.playstation_4
        state: 'on'
      sequence:
      - service: media_player.turn_on
        target:
          entity_id: media_player.sony_bravia_tv
      - service: media_player.select_source
        target:
          entity_id: media_player.play_sync_box
        data:
          source: Playstation 4
    default:
    - service: media_player.turn_on
      target:
        entity_id: media_player.sony_bravia_tv
  - service: light.turn_off
    target:
      entity_id:
      - light.woonkamer_kastverlichting
      - light.edison_lamp
      - light.tarnaby_lamp
  - service: light.turn_on
    target:
      entity_id: light.ambilight
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: light.turn_on
    target:
      entity_id: light.ambilight
    data:
      brightness_pct: 60
  mode: single
  icon: mdi:gamepad-round-outline
action_force_sleepy_blinds:
  alias: Action - Force Sleepy Blinds
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ action == ''Open'' }}'
      sequence:
      - service: cover.set_cover_position
        data:
          position: 100
        target: '{{ blind_group }}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - repeat:
          until:
          - condition: and
            conditions:
            - condition: template
              value_template: '{{ is_state_attr(blind_1, ''current_position'', 100)
                }}'
            - condition: template
              value_template: '{{ is_state_attr(blind_2, ''current_position'', 100)
                }}'
          sequence:
          - service: cover.set_cover_position
            data:
              position: 100
              entity_id: '{{ blind_1 }}'
          - service: cover.set_cover_position
            data:
              position: 100
              entity_id: '{{ blind_2 }}'
          - delay:
              hours: 0
              minutes: 0
              seconds: 5
              milliseconds: 0
    - conditions:
      - condition: template
        value_template: '{{ action == ''Close'' }}'
      sequence:
      - service: cover.set_cover_position
        data:
          position: 0
        target: '{{ blind_group }}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - repeat:
          until:
          - condition: and
            conditions:
            - condition: template
              value_template: '{{ is_state_attr(blind_1, ''current_position'', 0)
                }}'
            - condition: template
              value_template: '{{ is_state_attr(blind_2, ''current_position'', 0)
                }}'
          sequence:
          - service: cover.set_cover_position
            data:
              position: 0
              entity_id: '{{ blind_1 }}'
          - service: cover.set_cover_position
            data:
              position: 0
              entity_id: '{{ blind_2 }}'
          - delay:
              hours: 0
              minutes: 0
              seconds: 5
              milliseconds: 0
    default: []
  description: Action to force sleepy blinds to open or close by looping the call
    until open/closed state.
  fields:
    blind_group:
      name: Targets
      description: What should this service use as targeted areas, devices or entities.
      required: true
      selector:
        target:
          entity:
            domain: cover
    blind_1:
      name: Blind (1)
      description: Which entity's closed state (1) should end the loop.
      required: true
      selector:
        entity:
          domain: cover
    blind_2:
      name: Blind (2)
      description: Which entity's closed state (2) should end the loop.
      required: true
      selector:
        entity:
          domain: cover
    action:
      name: Action
      description: Action to send to the blind(s).
      required: true
      selector:
        select:
          options:
          - Open
          - Close
  mode: restart
  icon: mdi:blinds
